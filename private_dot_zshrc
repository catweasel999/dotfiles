# Set up the prompt
# ZSH_THEME="robbyrussell"
ZSH_THEME_CUSTOM=catweasel-amuse
ZSH_THEME_FALLBACK="amuse"

ZSH_THEME=${ZSH_THEME_CUSTOM:-$ZSH_THEME_FALLBACK}

PROMPT_THEME=~/.config/posh/nordtron-cw.omp.json # oh my posh

export LANG=de_DE.UTF-8
export QT_SCALE_FACTOR=1.5
export GDK_SCALE=1.5


# autoload -Uz promptinit
# promptinit
# prompt adam1

setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000

if [ -d /commandhistory ]; then
    HISTFILE=/commandhistory/.zsh_history
else
    HISTFILE=~/.zsh_history
fi

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'

# The following lines were added by compinstall

zstyle ':completion:*' list-colors ''
zstyle ':completion:*' menu select=1
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle :compinstall filename '/home/catweasel/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY
# adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY
# do not store duplications
setopt HIST_IGNORE_DUPS
# ignore duplicates when searching
setopt HIST_FIND_NO_DUPS
# removes blank lines from history
setopt HIST_REDUCE_BLANKS
bindkey '\e[A' history-search-backward
bindkey '\e[B' history-search-forward

plugins=(git zsh-autosuggestions autojump)

binfolders=( ~/bin ~/.local/bin ~/.local/share/coursier/bin ~/opt/idea/bin )
for i in "${binfolders[@]}"
do 
    if [[ -d $i ]]; then
        export PATH=$i:$PATH
    fi
done

additionalConfigs=( proxy.conf  keychain/keychain.sh ssh-auth/ssh-auth.sh )
for i in "${additionalConfigs[@]}"
do 
    configFile=~/.config/$i
    if [[ -f $configFile ]]; then
        source $configFile
    fi
done

umask 077

export HOSTNAME=`hostname`

[ -f ~/.config/github/cr_pat ] && source ~/.config/github/cr_pat
[ -f ~/.config/tags.sh ] && source ~/.config/tags.sh
[ -f ~/.config/shared_tags.sh ] && source ~/.config/shared_tags.sh
[ -f ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ] && source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[ -f ~/.poetry/env ] && source $HOME/.poetry/env

# docker

export DOCKER_BUILDKIT=1

# rootless docker
if [[ -f ~/.config/systemd/user/docker.service ]];then
    export DOCKER_HOST=unix:///run/user/`id -u`/docker.sock
fi

if [[ -d /opt/ros ]]; then
    [ -f /opt/ros/foxy/setup.zsh ] && source /opt/ros/foxy/setup.zsh
    [ -f /opt/ros/humble/setup.zsh ] && source /opt/ros/humble/setup.zsh
    export ROS_DOMAIN_ID=1
fi

GAZEBO=/usr/bin/gazebo
if [[ -f $GAZEBO ]]; then
    alias gazebo='/usr/bin/env QT_AUTO_SCREEN_SCALE_FACTOR=0 QT_SCALE_FACTOR=1.0 /usr/bin/gazebo'
fi

[ -n "$DISPLAY" ] && command xhost && xhost +local:docker

if [[ -d ~/.pyenv ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init --path)"
    fi
fi

if [ -d $HOME/.oh-my-zsh ]; then
    export ZSH="$HOME/.oh-my-zsh"
    export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
    source $ZSH/oh-my-zsh.sh
else 
    if type 'oh-my-posh' &>/dev/null; then
        if [[ -f ${PROMPT_THEME} ]]; then
            eval "$(oh-my-posh prompt init zsh --config ${PROMPT_THEME})"
        fi
    fi
fi

if [ -f ~/.zsh_aliases ]; then
    . ~/.zsh_aliases
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
